# Copyright 2022 Mycroft AI Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Dockerfile for Mimic 3 (https://github.com/MycroftAI/mimic3)
#
# Tests installation and functionality of Mimic 3 Debian package.
#
# Requires Docker buildx: https://docs.docker.com/buildx/working-with-buildx/
# -----------------------------------------------------------------------------
FROM debian:bullseye as test

ARG TARGETARCH
ARG TARGETVARIANT

ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

RUN echo "Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};" > /etc/apt/apt.conf.d/01cache

RUN --mount=type=cache,id=apt-run,target=/var/cache/apt \
    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \
    apt-get update && \
    apt-get install --yes --no-install-recommends \
        dpkg-dev

WORKDIR /test

COPY dist/*.deb ./
COPY mimic3-tts/mimic3_tts/VERSION ./

# Install mimic3 for current architecture
RUN --mount=type=cache,id=apt-run,target=/var/cache/apt \
    export mimic3_version="$(cat VERSION)" && \
    dpkg-architecture | \
    grep 'DEB_HOST_ARCH=' | \
    sed -e 's/.\+=//' | \
    xargs printf "./mimic3-tts_${mimic3_version}_%s.deb" | \
    xargs apt install --yes

# Version check
RUN export expected_version="$(cat VERSION)" && \
    export actual_version="$(mimic3 --version)" && \
    if [ ! "${expected_version}" = "${actual_version}"]; then \
        echo "${actual_version} != ${expected_version}"; \
        exit 1; \
    fi

# Generate sample and check
COPY tests/apope_sample.* ./
RUN mimic3 \
    --deterministic \
    --voice 'en_UK/apope_low' \
    < apope_sample.txt \
    > actual_sample.wav

# RUN diff apope_sample.wav actual_sample.wav

# -----------------------------------------------------------------------------

FROM scratch

COPY --from=test /test/actual_sample.wav ./
